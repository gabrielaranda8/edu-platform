{
  "swagger": "2.0",
  "info": {
    "title": "API de Gestión de Cursos",
    "description": "Esta API permite la gestión de cursos, lecciones y usuarios con diferentes roles (admin, usuario). Proporciona funcionalidades para administrar usuarios, autenticar y gestionar contenido educativo.",
    "version": "1.0.0",
    "contact": {
      "name": "Soporte Técnico",
      "url": "https://gabrielaranda.com",
      "email": "gabrielaranda8@gmail.com"
    },
    "license": {
      "name": "Licencia MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "basePath": "/api",
  "paths": {
    "/admin": {
      "get": {
        "summary": "Página principal del Administrador",
        "description": "Accede a la página principal de administración. Requiere que el usuario tenga rol de 'admin'.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Página de administración cargada exitosamente.",
            "schema": {
              "type": "string",
              "example": "Bienvenido al panel de administración"
            }
          },
          "401": {
            "description": "Usuario no autorizado.",
            "schema": {
              "type": "string",
              "example": "No tiene permisos para acceder a esta página."
            }
          }
        }
      }
    },
    "/admin/delete/{user_id}": {
      "post": {
        "summary": "Eliminar un usuario",
        "description": "Elimina un usuario dado su ID. Solo accesible para administradores.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "user_id",
            "type": "integer",
            "required": true,
            "description": "ID del usuario a eliminar."
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario eliminado exitosamente.",
            "schema": {
              "type": "string",
              "example": "Usuario eliminado."
            }
          },
          "400": {
            "description": "Usuario no encontrado.",
            "schema": {
              "type": "string",
              "example": "El usuario no existe."
            }
          },
          "401": {
            "description": "Usuario no autorizado.",
            "schema": {
              "type": "string",
              "example": "No tiene permisos para eliminar usuarios."
            }
          }
        }
      }
    },
    "/admin/dashboard_users": {
      "get": {
        "summary": "Ver listado de usuarios",
        "description": "Accede a la lista de usuarios registrados. Solo accesible para administradores.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de usuarios cargada exitosamente.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "401": {
            "description": "Usuario no autorizado.",
            "schema": {
              "type": "string",
              "example": "No tiene permisos para ver la lista de usuarios."
            }
          }
        }
      },
      "post": {
        "summary": "Crear un nuevo usuario",
        "description": "Crea un nuevo usuario con nombre, contraseña y rol. Solo accesible para administradores.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "username",
            "type": "string",
            "required": true,
            "description": "Nombre del nuevo usuario."
          },
          {
            "in": "formData",
            "name": "password",
            "type": "string",
            "required": true,
            "description": "Contraseña del nuevo usuario."
          },
          {
            "in": "formData",
            "name": "role",
            "type": "string",
            "required": true,
            "description": "Rol del nuevo usuario (admin, gestion, etc.)."
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario creado exitosamente.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Error en la solicitud (campos faltantes o inválidos).",
            "schema": {
              "type": "string",
              "example": "Faltan campos requeridos."
            }
          },
          "401": {
            "description": "Usuario no autorizado.",
            "schema": {
              "type": "string",
              "example": "No tiene permisos para crear usuarios."
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Iniciar sesión",
        "description": "Permite a los usuarios iniciar sesión con nombre de usuario y contraseña.",
        "parameters": [
          {
            "in": "formData",
            "name": "username",
            "type": "string",
            "required": true,
            "description": "Nombre de usuario."
          },
          {
            "in": "formData",
            "name": "password",
            "type": "string",
            "required": true,
            "description": "Contraseña del usuario."
          }
        ],
        "responses": {
          "200": {
            "description": "Inicio de sesión exitoso.",
            "schema": {
              "type": "string",
              "example": "Bienvenido de nuevo."
            }
          },
          "401": {
            "description": "Credenciales incorrectas.",
            "schema": {
              "type": "string",
              "example": "Las credenciales no son válidas."
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "summary": "Cerrar sesión",
        "description": "Permite al usuario cerrar sesión.",
        "responses": {
          "200": {
            "description": "Cierre de sesión exitoso.",
            "schema": {
              "type": "string",
              "example": "Sesión cerrada exitosamente."
            }
          }
        }
      }
    },
    "/cursos": {
      "get": {
        "summary": "Ver lista de cursos",
        "description": "Accede a la lista de cursos disponibles.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de cursos cargada exitosamente.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Course"
              }
            }
          },
          "401": {
            "description": "Usuario no autorizado.",
            "schema": {
              "type": "string",
              "example": "No tiene permisos para acceder a los cursos."
            }
          }
        }
      }
    },
    "/gestion": {
      "get": {
        "summary": "Gestionar cursos",
        "description": "Accede a la página para gestionar los cursos. Solo accesible para administradores y usuarios con rol 'gestion'.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Página de gestión de cursos cargada exitosamente.",
            "schema": {
              "type": "string",
              "example": "Bienvenido al panel de gestión de cursos."
            }
          },
          "401": {
            "description": "Usuario no autorizado.",
            "schema": {
              "type": "string",
              "example": "No tiene permisos para acceder a la página de gestión."
            }
          }
        }
      }
    },
    "/create_course": {
      "post": {
        "summary": "Crear un curso",
        "description": "Permite crear un nuevo curso con título, descripción y URL de video.",
        "parameters": [
          {
            "in": "formData",
            "name": "title",
            "type": "string",
            "required": true,
            "description": "Título del curso."
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string",
            "required": true,
            "description": "Descripción del curso."
          },
          {
            "in": "formData",
            "name": "video_url",
            "type": "string",
            "required": true,
            "description": "URL del video del curso."
          }
        ],
        "responses": {
          "200": {
            "description": "Curso creado exitosamente.",
            "schema": {
              "$ref": "#/definitions/Course"
            }
          },
          "400": {
            "description": "Error en la solicitud (campos faltantes o inválidos).",
            "schema": {
              "type": "string",
              "example": "Faltan campos requeridos."
            }
          },
          "401": {
            "description": "Usuario no autorizado.",
            "schema": {
              "type": "string",
              "example": "No tiene permisos para crear cursos."
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Course": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "image_url": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "example": "2025-02-07T08:00:00Z"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "username": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "example": "2025-02-07T08:00:00Z"
        }
      }
    }
  },
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "description": "Autenticación mediante token Bearer"
    }
  }
}

